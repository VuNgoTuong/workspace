1/ .alert p:empty {
  display: none;
}

2/
.section {
  display: flex;
  flex-direction: column;
}

@media (min-width: 700px) {
  .section {
    flex-direction: row;
  }
}
Nếu chiều rộng của khung nhìn là 700px hoặc lớn hơn, hãy thay đổi flex-directioncủa .sectionthành column. 
Đó là câu lệnh if rõ ràng

3/
@media (hover: hover) {
  .card:hover {
    /* Add hover styles.. */
  }
}

Trong CSS, kiểu di chuột sẽ chỉ được áp dụng nếu người dùng đang sử dụng chuột hoặc bàn di chuột .

4/
@supports cho phép chúng tôi kiểm tra xem một tính năng CSS nhất định có được hỗ trợ 
trong trình duyệt hay không

@supports selector(:has(p)) {
  .card-thumb {
    aspect-ratio: 1;
  }
}

5/ 
Nếu thẻ có hình ảnh:

.card:has(.card__image) {
  display: flex;
  align-items: center;
}
Và nếu nó không có hình ảnh:

.card:not(:has(.card__image)) {
  border-top: 3px solid #7c93e9;
}

6/
Với CSS :has, chúng tôi có thể kiểm tra xem othertùy chọn có đuợc chọn hay không và nếu có, 
hãy hiển thị trường nhập liệu.

.other-field {
  display: none;
}

form:has(option[value="other"]:checked) .other-field {
  display: block;
}

7/
Trong ví dụ này, chúng tôi có một cảnh báo trong trang và với CSS :has, 
có thể kiểm tra xem trang tổng quan có cảnh báo hay không và nếu có, hãy tạo kiểu cho phù hợp.

.main:has(.alert) .header {
  border-top: 2px solid red;
  background-color: #fff4f4;
}

8/ :not() kiểm tra class đó có nội dung không, nếu có thì css kiểu này, k có thì css kiểu khác
Bộ chọn :not 
Lớp giả này loại trừ các phần tử không khớp với một bộ chọn nhất định. 
Ví dụ: có thể hữu ích khi kiểm tra xem một mục có phải là mục cuối cùng hay không và nếu có, hãy xóa đường viền.

.item:not(:last-child) {
  border-bottom: 1px solid lightgrey;
}

9/ 
khi thẻ bằng hoặc lớn hơn khung nhìn, thì bán kính phải là 8px, nếu không thì là 0px.

.card {
  border-radius: max(
    0px,
    min(8px, calc((100vw - 4px - 100%) * 9999))
  );
}